---
- name: Ensure apt cache is up to date.
  ansible.builtin.apt:
    update_cache: true
    cache_valid_time: 3600
  when:
    - ansible_facts.os_family == "Debian"

- name: Ensure pacman cache is up to date
  community.general.pacman:
    update_cache: true
  when:
    - ansible_facts.os_family == "Archlinux"

- name: Check if Docker is already present.
  ansible.builtin.command: which docker
  failed_when: false
  changed_when: false
  check_mode: false
  register: docker_command_result

- name: Download Docker install convenience script.
  ansible.builtin.get_url:
    url: https://get.docker.com/
    dest: /tmp/get-docker.sh
    mode: 0775
  when: docker_command_result.rc == 1

- name: Run Docker install convenience script.
  ansible.builtin.command: /tmp/get-docker.sh
  environment:
    CHANNEL: stable
  when: docker_command_result.rc == 1

- name: Ensure Docker is started.
  ansible.builtin.service:
    name: docker
    state: started
    enabled: true

- name: Ensure dependencies are installed (Debian).
  ansible.builtin.apt:
    name:
      - libffi-dev
      - libssl-dev
      - python3-dev
      - python3-pip
      - git
      - rsync
    state: present
  when: ansible_facts.os_family == "Debian"

- name: Ensure dependencies are installed (Archlinux).
  community.general.pacman:
    name:
      - libffi
      - openssl
      - base-devel
      - python-pip
      - git
      - rsync
    state: present
  when: ansible_facts.os_family == "Archlinux"

- name: Install Docker Compose using Pip.
  ansible.builtin.pip:
    name: docker-compose
    state: present
    executable: pip3

# reset_connection doesn't support conditionals.
- name: Reset connection so docker group is picked up.
  ansible.builtin.meta: reset_connection
